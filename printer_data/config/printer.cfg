[include fluidd.cfg]
[include TEST_SPEED.cfg]
[include timelapse.cfg]
[include macros.cfg] 
[include KAMP_Settings.cfg]

[printer]
kinematics: cartesian
max_velocity: 175
max_accel: 4500
max_z_velocity: 5
max_z_accel: 100
#   The type of printer in use. This option may be one of: cartesian,
#   corexy, corexz, hybrid_corexy, hybrid_corexz, generic_cartesian,
#   rotary_delta, delta, deltesian, polar, winch, or none.
#   This parameter must be specified.
#max_velocity:
#   Maximum velocity (in mm/s) of the toolhead (relative to the
#   print). This value may be changed at runtime using the
#   SET_VELOCITY_LIMIT command. This parameter must be specified.
#max_accel:
#   Maximum acceleration (in mm/s^2) of the toolhead (relative to the
#   print). Although this parameter is described as a "maximum"
#   acceleration, in practice most moves that accelerate or decelerate
#   will do so at the rate specified here. The value specified here
#   may be changed at runtime using the SET_VELOCITY_LIMIT command.
#   This parameter must be specified.
minimum_cruise_ratio: 0.65
#   Most moves will accelerate to a cruising speed, travel at that
#   cruising speed, and then decelerate. However, some moves that
#   travel a short distance could nominally accelerate and then
#   immediately decelerate. This option reduces the top speed of these
#   moves to ensure there is always a minimum distance traveled at a
#   cruising speed. That is, it enforces a minimum distance traveled
#   at cruising speed relative to the total distance traveled. It is
#   intended to reduce the top speed of short zigzag moves (and thus
#   reduce printer vibration from these moves). For example, a
#   minimum_cruise_ratio of 0.5 would ensure that a standalone 1.5mm
#   move would have a minimum cruising distance of 0.75mm. Specify a
#   ratio of 0.0 to disable this feature (there would be no minimum
#   cruising distance enforced between acceleration and deceleration).
#   The value specified here may be changed at runtime using the
#   SET_VELOCITY_LIMIT command. The default is 0.5.
square_corner_velocity: 8
#   The maximum velocity (in mm/s) that the toolhead may travel a 90
#   degree corner at. A non-zero value can reduce changes in extruder
#   flow rates by enabling instantaneous velocity changes of the
#   toolhead during cornering. This value configures the internal
#   centripetal velocity cornering algorithm; corners with angles
#   larger than 90 degrees will have a higher cornering velocity while
#   corners with angles less than 90 degrees will have a lower
#   cornering velocity. If this is set to zero then the toolhead will
#   decelerate to zero at each corner. The value specified here may be
#   changed at runtime using the SET_VELOCITY_LIMIT command. The
#   default is 5mm/s.

#[auto_speed]
#axis: x, y  ; One or multiple of `x`, `y`, `diag_x`, `diag_y`, `z`
#margin: 100            ; How far away from your axes to perform movements
#settling_home: 1      ; Perform settling home before starting Auto Speed
#max_missed: 1.0       ; Maximum full steps that can be missed
#endstop_samples: 3    ; How many endstop samples to take for endstop variance
#accel_min: 2000.0     ; Minimum acceleration test may try
#accel_max: 10000.0    ; Maximum acceleration test may try
#accel_accu: 0.05      ; Keep binary searching until the result is within this percentage
#velocity_min: 50.0    ; Minimum velocity test may try
#velocity_max: 200.0  ; Maximum velocity test may try
#velocity_accu: 0.05   ; Keep binary searching until the result is within this percentage
#derate: 0.8           ; Derate discovered results by this amount
#validate_margin: Unset      ; Margin for VALIDATE, Defaults to margin
#validate_inner_margin: 20.0 ; Margin for VALIDATE inner pattern
#validate_iterations: 50     ; Perform VALIDATE pattern this many times
#results_dir: ~/printer_data/config ; Destination directory for graphs

[tftbridge]
tft_device: /dev/ttyAMA0
tft_baud: 250000
tft_timeout: 0
klipper_device: /home/ender/printer_data/comms/klippy.serial
klipper_baud: 250000
klipper_timeout: 0

[bltouch]
sensor_pin: ^PC14 #Remove ^ if print head crashes into bed, the ^ is for the CR touch a bl touch should work without.
control_pin: PA1
probe_with_touch_mode: false
x_offset: -30
y_offset: -40
#z_offset: 0.0
stow_on_each_sample: false
speed: 15
samples: 3
sample_retract_dist: 5 # Can be set lower, example 2.5 depending on height of bltouch from bed
lift_speed: 40
samples_tolerance_retries: 3

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100
[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[safe_z_home]
home_xy_position: 115,115 # Change coordinates to the center of your print bed
speed: 100
z_hop: 10              # Move up 10mm
z_hop_speed: 25

[bed_mesh]
speed: 150
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
#mesh_radius:
#   Defines the radius of the mesh to probe for round beds. Note that
#   the radius is relative to the coordinate specified by the
#   mesh_origin option. This parameter must be provided for round beds
#   and omitted for rectangular beds.
#mesh_origin:
#   Defines the center X, Y coordinate of the mesh for round beds. This
#   coordinate is relative to the probe's location. It may be useful
#   to adjust the mesh_origin in an effort to maximize the size of the
#   mesh radius. Default is 0, 0. This parameter must be omitted for
#   rectangular beds.
mesh_min:10,10
#   Defines the minimum X, Y coordinate of the mesh for rectangular
#   beds. This coordinate is relative to the probe's location. This
#   will be the first point probed, nearest to the origin. This
#   parameter must be provided for rectangular beds.
mesh_max:195,195
#   Defines the maximum X, Y coordinate of the mesh for rectangular
#   beds. Adheres to the same principle as mesh_min, however this will
#   be the furthest point probed from the bed's origin. This parameter
#   must be provided for rectangular beds.
probe_count: 3,3
#   For rectangular beds, this is a comma separate pair of integer
#   values X, Y defining the number of points to probe along each
#   axis. A single value is also valid, in which case that value will
#   be applied to both axes. Default is 3, 3.
#round_probe_count: 5
#   For round beds, this integer value defines the maximum number of
#   points to probe along each axis. This value must be an odd number.
#   Default is 5.
fade_start: 1
#   The gcode z position in which to start phasing out z-adjustment
#   when fade is enabled. Default is 1.0.
fade_end: 0
#   The gcode z position in which phasing out completes. When set to a
#   value below fade_start, fade is disabled. It should be noted that
#   fade may add unwanted scaling along the z-axis of a print. If a
#   user wishes to enable fade, a value of 10.0 is recommended.
#   Default is 0.0, which disables fade.
fade_target: .01
#   The z position in which fade should converge. When this value is
#   set to a non-zero value it must be within the range of z-values in
#   the mesh. Users that wish to converge to the z homing position
#   should set this to 0. Default is the average z value of the mesh.
split_delta_z: .025
#   The amount of Z difference (in mm) along a move that will trigger
#   a split. Default is .025.
move_check_distance: 5.0
#   The distance (in mm) along a move to check for split_delta_z.
#   This is also the minimum length that a move can be split. Default
#   is 5.0.
mesh_pps: 2, 2
#   A comma separated pair of integers X, Y defining the number of
#   points per segment to interpolate in the mesh along each axis. A
#   "segment" can be defined as the space between each probed point.
#   The user may enter a single value which will be applied to both
#   axes. Default is 2, 2.
algorithm: lagrange
#   The interpolation algorithm to use. May be either "lagrange" or
#   "bicubic". This option will not affect 3x3 grids, which are forced
#   to use lagrange sampling. Default is lagrange.
#bicubic_tension: .1
#   When using the bicubic algorithm the tension parameter above may
#   be applied to change the amount of slope interpolated. Larger
#   numbers will increase the amount of slope, which results in more
#   curvature in the mesh. Default is .2.
zero_reference_position: 115,115
#   An optional X,Y coordinate that specifies the location on the bed
#   where Z = 0.  When this option is specified the mesh will be offset
#   so that zero Z adjustment occurs at this location.  The default is
#   no zero reference.
#faulty_region_1_min:
#faulty_region_1_max:
#   Optional points that define a faulty region.  See docs/Bed_Mesh.md
#   for details on faulty regions.  Up to 99 faulty regions may be added.
#   By default no faulty regions are set.
adaptive_margin: 50
#   An optional margin (in mm) to be added around the bed area used by
#   the defined print objects when generating an adaptive mesh.
#scan_overshoot:
#  The maximum amount of travel (in mm) available outside of the mesh.
#  For rectangular beds this applies to travel on the X axis, and for round beds
#  it applies to the entire radius.  The tool must be able to travel the amount
#  specified outside of the mesh.  This value is used to optimize the travel
#  path when performing a "rapid scan".  The minimum value that may be specified
#  is 1.  The default is no overshoot.



[virtual_sdcard]
path: ~/printer_data/gcodes

[display_status]

[pause_resume]

[stepper_x]
step_pin: PB13
dir_pin: !PB12
enable_pin: !PB14
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC0
position_endstop: 0
position_max: 235
homing_speed: 50

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 0.580
hold_current: 0.500
stealthchop_threshold: 999999

[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC1
position_endstop: -10
position_min: -10
position_max: 245
homing_speed: 50

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 0.775
hold_current: 0.500
stealthchop_threshold: 999999

[stepper_z]
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
microsteps: 16
rotation_distance: 8
# endstop_pin: ^PC2
# position_endstop: 0.0
endstop_pin: probe:z_virtual_endstop
position_max: 250
position_min: -6
homing_speed: 50

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 0.775
hold_current: 0.500
stealthchop_threshold: 999999

[extruder]
step_pin: PB3
dir_pin: !PB4
enable_pin: !PD1
microsteps: 16
gear_ratio: 42:12
rotation_distance: 26.35914
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
control = pid
pid_kp = 21.168
pid_ki = 1.238
pid_kd = 90.494
min_temp: 0
max_temp: 300 # Set to 300 for Sprite Pro Extruder
min_extrude_temp: 170
pressure_advance: 0.050
pressure_advance_smooth_time: 0.05000
max_extrude_cross_section: 5 


[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
run_current: 0.675
hold_current: 0.500
stealthchop_threshold: 999999

[firmware_retraction]
retract_length: 1
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 85
#   The speed of retraction, in mm/s. The default is 20 mm/s.
unretract_extra_length: .8
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 85
#   The speed of unretraction, in mm/s. The default is 10 mm/s.

[heater_bed]
heater_pin: PC9
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC4
control = pid
pid_kp = 72.913
pid_ki = 1.434
pid_kd = 926.905
min_temp: 0
max_temp: 130

[heater_fan controller_fan]
pin: PB15
heater: heater_bed
heater_temp: 45.0

[heater_fan nozzle_cooling_fan]
pin: PC7

[fan]
pin: PC6

[mcu]
baud: 250000
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_3100060001504E5238363120-if00
# restart_method: command

[screws_tilt_adjust]
screw4: 63, 74 
screw4_name: front left screw
screw3: 234, 74
screw3_name: front right screw
screw2: 234, 235
screw2_name: rear right screw
screw1: 63, 235  #screw coordinates need to be measure for YOUR specific printer
screw1_name: rear left screw
horizontal_move_z: 20
speed: 100  #speed of travel moves between screws
screw_thread: CW-M4
#screw1: 76, 32
#screw1_name: Front left
#screw2: 246, 32
#screw2_name: Front right
#screw3: 246, 202
#screw3_name: Back right
#screw4: 76, 202
#screw4_name: Back left
#screw_thread: CW-M4
#horizontal_move_z: 10

[filament_switch_sensor my_sensor]
pause_on_runout: True
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
#runout_gcode:
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
#insert_gcode:
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.
#debounce_delay:
#   A period of time in seconds to debounce events prior to running the
#   switch gcode. The switch must he held in a single state for at least
#   this long to activate. If the switch is toggled on/off during this delay,
#   the event is ignored. Default is 0.
switch_pin: PC15
#   The pin on which the switch is connected. This parameter must be
#   provided.


######################################################################
#  BigTreeTech TFT TouchScreen emulated 12864 mode
######################################################################

[display]
lcd_type: emulated_st7920
spi_software_miso_pin: PD8 # status led, Virtual MISO
spi_software_mosi_pin: PD6
spi_software_sclk_pin: PB9
en_pin: PB8
encoder_pins: ^PA10, ^PA9
click_pin: ^!PA15

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PD6, EXP1_10=<5V>
    
[output_pin beeper]
pin: PB5

[gcode_macro SENSORLESS_HOME_X]
gcode:
    
    {% set HOME_CUR = 0.580 %}
    {% set driver_config = printer.configfile.settings['tmc2209 stepper_x'] %}
    {% set RUN_CUR = driver_config.run_current %}
    # Set current for sensorless homing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR}
    # Pause to ensure driver stall flag is clear
    G4 P2000
    # Home
    G28 X0
    # Move away
    G90
    G1 X5 F1200
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CUR}
    
[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    # Heat bed for probing
    M190 S{BED_TEMP}
    # Set and wait for nozzle to reach printing temperature
    M109 S{EXTRUDER_TEMP}
    # Use absolute coordinates
    G90
    # Home the printer
    G28
    # If you are using QGL:
    #QUAD_GANTRY_LEVEL
    #G28 Z
    # If you are using Z-Tilt:
    #Z_TILT_ADJUSt
    # If you are generating a new bed mesh:
    ## NOTE: The adaptive meshing feature requires exclude_object ##
    ## and may require 'Label Objects' to be enabled in the slicer ##
    ## To mesh without it just use BED_MESH_CALIBRATE ##
    # If you are loading an existing mesh:
    #BED_MESH_PROFILE LOAD=default
    # Move the nozzle near the bed
    G1 Z5 F3000
    
    # Start printing!
    
[exclude_object]

[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z10 F3000
    G90
    # Disable steppers
    M84
    
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### get user parameters or use default #####
    {% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
    {% set idle_timeout = client.idle_timeout|default(0) %}
    {% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != '' else 0 %}
    {% set restore = False if printer.toolhead.extruder == ''
    else True  if params.RESTORE|default(1)|int == 1 else False %}
    ##### end of definitions #####
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{'restore': restore, 'temp': temp}}"
    # set a new idle_timeout value
    {% if idle_timeout > 0 %}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}
    SET_IDLE_TIMEOUT TIMEOUT={idle_timeout}
    {% endif %}
    PAUSE_BASE
    {client.user_pause_macro|default("")}
    _TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
variable_last_extruder_temp: {'restore': False, 'temp': 0}
variable_restore_idle_timeout: 0
variable_idle_state: False
gcode:
    ##### get user parameters or use default #####
    {% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
    {% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
    {% set sp_move = client.speed_move|default(velocity) %}
    {% set runout_resume = True if client.runout_sensor|default("") == ""     # no runout
    else True if not printer[client.runout_sensor].enabled  # sensor is disabled
    else printer[client.runout_sensor].filament_detected %} # sensor status
    {% set can_extrude = True if printer.toolhead.extruder == ''           # no extruder defined in config
    else printer[printer.toolhead.extruder].can_extrude %} # status of active extruder
    {% set do_resume = False %}
    {% set prompt_txt = [] %}
    ##### end of definitions #####
    #### Printer comming from timeout idle state ####
    {% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
    {% if last_extruder_temp.restore %}
    # we need to use the unicode (\u00B0) for the ° as py2 env's would throw an error otherwise
    RESPOND TYPE=echo MSG='{"Restoring \"%s\" temperature to %3.1f\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }'
    M109 S{last_extruder_temp.temp}
    {% set do_resume = True %}
    {% elif can_extrude %}
    {% set do_resume = True %}
    {% else %}
    RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
    {% set _d = prompt_txt.append("\"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}
    {% endif %}
    #### Printer comming out of regular PAUSE state ####
    {% elif can_extrude %}
    {% set do_resume = True %}
    {% else %}
    RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
    {% set _d = prompt_txt.append("\"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}
    {% endif %}
    {% if runout_resume %}
    {% if do_resume %}
    {% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %} # restore idle_timeout time
    {client.user_resume_macro|default("")}
    _CLIENT_EXTRUDE
    RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}
    {% endif %}
    {% else %}
    RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}'
    {% set _d = prompt_txt.append("\"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}
    {% endif %}
    ##### Generate User Information box in case of abort #####
    {% if not (runout_resume and do_resume) %}
    RESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"
    {% for element in prompt_txt %}
    RESPOND TYPE=command MSG='{"action:prompt_text %s" % element}'
    {% endfor %}
    RESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"
    RESPOND TYPE=command MSG="action:prompt_show"
    {% endif %}
    
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    ##### get user parameters or use default #####
    {% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
    {% set allow_park = client.park_at_cancel|default(false)|lower == 'true' %}
    {% set retract = client.cancel_retract|default(5.0)|abs %}
    ##### define park position #####
    {% set park_x = "" if (client.park_at_cancel_x|default(none) is none)
    else "X=" ~ client.park_at_cancel_x %}
    {% set park_y = "" if (client.park_at_cancel_y|default(none) is none)
    else "Y=" ~ client.park_at_cancel_y %}
    {% set custom_park = park_x|length > 0 or park_y|length > 0 %}
    ##### end of definitions #####
    # restore idle_timeout time if needed
    {% if printer['gcode_macro RESUME'].restore_idle_timeout > 0 %}
    SET_IDLE_TIMEOUT TIMEOUT={printer['gcode_macro RESUME'].restore_idle_timeout}
    {% endif %}
    {% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}
    _CLIENT_RETRACT LENGTH={retract}
    TURN_OFF_HEATERS
    M106 S0
    {client.user_cancel_macro|default("")}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
    # clear pause_next_layer and pause_at_layer as preparation for next print
    SET_PAUSE_NEXT_LAYER ENABLE=0
    SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0
    CANCEL_PRINT_BASE
    
    
[include shell_command.cfg]





[include moonraker_obico_macros.cfg]


#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#*# z_offset = 2.711
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.216662, -0.100829, -0.094162
#*# 	-0.106662, 0.005004, -0.070829
#*# 	-0.058329, 0.021671, -0.044996
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 10.0
#*# max_x = 183.86
#*# min_y = 40.103
#*# max_y = 194.983
#*#
#*# [heater_bed]
#*#
#*# [extruder]

